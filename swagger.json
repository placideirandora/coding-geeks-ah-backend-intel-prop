{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Authors Haven",
        "description": "Authors Haven is a social platform for the creative at heart. It is a platform where like minded authors can express themselves in writing",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "basePath": "/",
    "tags": [],
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/": {
            "get": {
                "parameters": [],
                "tags": [
                    "Blog"
                ],
                "summary": "Welcome to Authors Haven",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users/signup": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "Create new user in system",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User that we want to create",
                        "schema": {
                            "required": [
                                "firstName",
                                "lastName",
                                "userName",
                                "email",
                                "password",
                                "confirmPassword"
                            ],
                            "properties": {
                                "firstName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "userName": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "confirmPassword": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created new User",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "User already exist",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "Super admin can create a new user or admin in system",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User token",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "The User we want to create",
                        "schema": {
                            "required": [
                                "firstName",
                                "lastName",
                                "userName",
                                "email",
                                "password",
                                "confirmPassword",
                                "role"
                            ],
                            "properties": {
                                "firstName": {
                                    "type": "string",
                                    "required": true
                                },
                                "lastName": {
                                    "type": "string",
                                    "required": true
                                },
                                "userName": {
                                    "type": "string",
                                    "required": true
                                },
                                "email": {
                                    "type": "string",
                                    "required": true
                                },
                                "password": {
                                    "type": "string",
                                    "required": true
                                },
                                "confirmPassword": {
                                    "type": "string",
                                    "required": true
                                },
                                "role": {
                                    "type": "string",
                                    "required": false
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created new User",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "User already exist",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "User is not logged in",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{username}": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "description": "Super admin can update user profile role",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "Username of the user to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User token",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "The User we want to create",
                        "schema": {
                            "required": [
                                "role"
                            ],
                            "properties": {
                                "role": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated a user role",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid role value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "User is not logged in",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "When non-super admins tries to update a user role",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "description": "Admins can delete user profiles",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "Username of the user to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User token",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted a user",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User is not logged in",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "When the user has no permission to delete a resource",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "Login user in system",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User that we want to login",
                        "schema": {
                            "required": [
                                "email",
                                "password"
                            ],
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged in",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "$ref": "#/definitions/Login"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Wrong login credentials",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/users/signout": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "Logout a user in system",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Token of the user wants to logout"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are already logged out",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            },
                            "data": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users/send-email": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "Send email to the user",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User that want to reset password",
                        "schema": {
                            "required": [
                                "email"
                            ],
                            "properties": {
                                "email": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully email sent to user",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "properties": {
                                "errors": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users/reset-password/{token}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "User reset password",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User that want to reset password",
                        "schema": {
                            "required": [
                                "password",
                                "confirmPassword"
                            ],
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "confirmPassword": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully user reset password",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/profiles/{username}/follow": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "description": "User follow each other",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully follow user",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/profiles/{username}/unfollow": {
            "delete": {
                "tags": [
                    "Profile"
                ],
                "description": "User unfollow each other",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully unfollowed user",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/profiles/{username}/following": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "description": "User can see a list of those he follows",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully retrieve the list followers",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/profiles/{username}/followers": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "description": "User can see a list of those follow him",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully retrieve the list followers",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/users/verify-email/{token}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "User email verification link",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully"
                    },
                    "403": {
                        "description": "Invalid token or signature"
                    }
                }
            }
        },
        "/api/v1/users/{username}/block": {
            "put": {
                "tags": [
                    "Users"
                ],
                "description": "Super admin and admin should be able to block a user",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Super admin or admin's token"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "User to be blocked",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "User blocked"
                    },
                    "400": {
                        "description": "User already blocked"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthorized Access"
                    }
                }
            }
        },
        "/api/v1/users/{username}/unblock": {
            "put": {
                "tags": [
                    "Users"
                ],
                "description": "Super admin and admin should be able to unblock a blocked user",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Super admin or admin's token"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "User to be unblocked",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "User unblocked"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthorized Access"
                    }
                }
            }
        },
        "/api/v1/profiles/{username}": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "update the user profile",
                "description": "update the user profile",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "your current username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "description": "username you want to change to",
                        "in": "forrmData",
                        "paramType": "body",
                        "type": "string"
                    },
                    {
                        "name": "bio",
                        "description": "biograpaphy",
                        "in": "forrmData",
                        "paramType": "body",
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "in": "forrmData",
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "success: when a profile is sucessfully updated"
                    },
                    "404": {
                        "description": "Error: user profile not found"
                    },
                    "403": {
                        "description": "Error: forbiden"
                    },
                    "401": {
                        "description": " Error: unauthorized"
                    },
                    "500": {
                        "description": "Error: Server Error"
                    }
                }
            },
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "get the user profile",
                "description": "get the user profile",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "put your username here",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "success: when a profile is sucessfully retrieved"
                    },
                    "404": {
                        "description": "Error: user profile not found"
                    },
                    "401": {
                        "description": " unauthorized"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/profiles/{username}/notifications/{subscribe}": {
            "patch": {
                "tags": [
                    "Profile"
                ],
                "description": "User can subscribe or unsubscribe to email notification",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subscribe",
                        "in": "path",
                        "description": "subscription",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully subscribe or unsubscribe to email notification",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/profiles/notifications/{id}/read": {
            "patch": {
                "tags": [
                    "Profile"
                ],
                "description": "User can mark notification as read",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully notification marked as read",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/profiles/notifications/read/all": {
            "patch": {
                "tags": [
                    "Profile"
                ],
                "description": "User can mark all notification as read",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully notification marked as read",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/profiles/notifications/all": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "description": "User can get all notification as read",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully notifications retrieved",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/profiles": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "All profiles",
                "description": "Fetch all user profiles",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User token",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all profiles",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer"
                                },
                                "data": {
                                    "type": "array",
                                    "$ref": "#/definitions/Profile"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User is not authenticated",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "string"
                                },
                                "me": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/articles": {
            "post": {
                "tags": [
                    "Articles"
                ],
                "description": "Authenticated user can create articles",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "formData",
                        "description": "",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "tagList",
                        "in": "formData",
                        "description": "",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "category",
                        "in": "formData",
                        "description": "",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "image",
                        "in": "formData",
                        "description": "",
                        "type": "file",
                        "required": false
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Article created successfully",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "$ref": "#/definitions/Articles"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Wrong token",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Articles"
                ],
                "description": "Fetch all user articles",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "description": "The page to be loaded"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "The numbers of items to return"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all articles",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer"
                                },
                                "data": {
                                    "type": "array",
                                    "$ref": "#/definitions/Articles"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User is not authenticated",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "string"
                                },
                                "me": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "string"
                                },
                                "me": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/articles/{articleSlug}/comments": {
            "post": {
                "tags": [
                    "Articles"
                ],
                "summary": "Comment on an article",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Token",
                        "required": true
                    },
                    {
                        "name": "articleSlug",
                        "in": "path",
                        "description": "A slug of an article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Commented on the article"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Article Not Found"
                    },
                    "401": {
                        "description": "Unauthorized Access"
                    }
                }
            },
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Retrieve an article's comments",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Token",
                        "required": true
                    },
                    {
                        "name": "articleSlug",
                        "in": "path",
                        "description": "A slug of an article",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comments retrieved"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Comments not found"
                    },
                    "401": {
                        "description": "Unauthorized Access"
                    }
                }
            }
        },
        "/api/v1/articles/{articleSlug}/comments/{commentId}": {
            "patch": {
                "tags": [
                    "Articles"
                ],
                "summary": "Update a comment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Token",
                        "required": true
                    },
                    {
                        "name": "articleSlug",
                        "in": "path",
                        "description": "A slug of an article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "An identifier of a comment",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment updated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Comment not found"
                    },
                    "401": {
                        "description": "Unauthorized Access"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Articles"
                ],
                "summary": "Delete a comment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Token",
                        "required": true
                    },
                    {
                        "name": "articleSlug",
                        "in": "path",
                        "description": "A slug of an article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "An identifier of a comment",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Comment not found"
                    },
                    "401": {
                        "description": "Unauthorized Access"
                    }
                }
            }
        },
        "/api/v1/articles/{articleSlug}/comments/{commentId}/history": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "admin view comment edit history",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Token",
                        "required": true
                    },
                    {
                        "name": "articleSlug",
                        "in": "path",
                        "description": "A slug of an article",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "An identifier of a comment",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully comment edit history retrieved"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Comment not found"
                    },
                    "401": {
                        "description": "Unauthorized Access"
                    }
                }
            }
        },
        "/api/v1/comments/{id}/like": {
            "put": {
                "tags": [
                    "Articles"
                ],
                "summary": "Like a specific comment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Token",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An identifier of a comment",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reaction updated successully"
                    },
                    "201": {
                        "description": "Like registered successully"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Access"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                }
            }
        },
        "/api/v1/comments/{id}/dislike": {
            "put": {
                "tags": [
                    "Articles"
                ],
                "summary": "Dislike a specific comment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Token",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "An identifier of a comment",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reaction updated successully"
                    },
                    "201": {
                        "description": "Dislike registered successully"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Access"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                }
            }
        },
        "/api/v1/articles/{articleId}/rate": {
            "post": {
                "tags": [
                    "Articles"
                ],
                "description": "User should be able to rate an article",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token"
                    },
                    {
                        "name": "articleId",
                        "in": "path",
                        "description": "id of the article you want to rate",
                        "type": "integer"
                    },
                    {
                        "name": "Rate",
                        "in": "body",
                        "description": "Your rating to this article betwee 1 and 5",
                        "schema": {
                            "required": [
                                "rate"
                            ],
                            "properties": {
                                "rate": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "summary": "Retrieve an article's comments",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Article successfully rate",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "schema": {
                                        "$ref": "#/definitions/RateArticle"
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Successfully updated the rate",
                        "schema": {
                            "$ref": "#/definitions/RateArticle"
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Wrong token",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Articles"
                ],
                "description": "User should be able to get rates of an article",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token"
                    },
                    {
                        "name": "articleId",
                        "in": "path",
                        "description": "id of the article you want to rate",
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "description": "The page to be loaded"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "The numbers of items to return"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Article successfully rates retrieved",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "schema": {
                                        "$ref": "#/definitions/RateArticle"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Wrong token",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/articles/{slug}/share/{option}": {
            "post": {
                "tags": [
                    "Articles"
                ],
                "description": "User should be able to share an article on different channels",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token"
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the article you want to rate",
                        "type": "string"
                    },
                    {
                        "name": "option",
                        "in": "path",
                        "description": "channel you want to share the article",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Article successfully rate",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "schema": {
                                        "$ref": "#/definitions/channels"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Wrong token",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/articles/{articleSlug}/like": {
            "put": {
                "tags": [
                    "Articles"
                ],
                "summary": "Like an article",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Token",
                        "required": true
                    },
                    {
                        "name": "articleSlug",
                        "in": "path",
                        "description": "A slug of an article",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article Liked"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Article Not Found"
                    },
                    "401": {
                        "description": "Unauthorized Access"
                    }
                }
            }
        },
        "/api/v1/articles/{articleSlug}/dislike": {
            "put": {
                "tags": [
                    "Articles"
                ],
                "summary": "Dislike an article",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Token",
                        "required": true
                    },
                    {
                        "name": "articleSlug",
                        "in": "path",
                        "description": "A slug of an article",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article Disliked"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Article Not Found"
                    },
                    "401": {
                        "description": "Unauthorized Access"
                    }
                }
            }
        },
        "/api/v1/articles/{articleSlug}/statistics": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Retrieve an article's reading statistics",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Token",
                        "required": true
                    },
                    {
                        "name": "articleSlug",
                        "in": "path",
                        "description": "A slug of an article",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reading statistics retrieved"
                    },
                    "404": {
                        "description": "Reading statistics/Article not found"
                    },
                    "401": {
                        "description": "Unauthorized Access"
                    }
                }
            }
        },
        "/api/v1/articles/{articleSlug}/reports": {
            "post": {
                "tags": [
                    "Articles"
                ],
                "description": "User should be able to report an article",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token"
                    },
                    {
                        "name": "articleSlug",
                        "in": "path",
                        "description": "Slug of an article to report",
                        "type": "string"
                    },
                    {
                        "name": "Report",
                        "in": "body",
                        "description": "Report an article",
                        "schema": {
                            "required": [
                                "reason",
                                "description"
                            ],
                            "properties": {
                                "reason": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Article successfully reported",
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Report"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Articles"
                ],
                "description": "User should be able to retreive the reports of a specific article",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token"
                    },
                    {
                        "name": "articleSlug",
                        "in": "path",
                        "description": "Slug of an article to report",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Report retreived successfully",
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Report"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/articles/reports/all": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "description": "Admin should be able to get all reports",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Report successfully retreived",
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Report"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No report found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/articles/{articleSlug}/reports/{reportId}": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "description": "User should be able to retreive the reports of a specific article",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token"
                    },
                    {
                        "name": "articleSlug",
                        "in": "path",
                        "description": "Slug of an article to report",
                        "type": "string"
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "id of a specific report",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Report retreived successfully",
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Report"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Articles"
                ],
                "description": "User should be able to delete his report",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token"
                    },
                    {
                        "name": "articleSlug",
                        "in": "path",
                        "description": "Slug of an article to report",
                        "type": "string"
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "id of a specific report",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Report successfully deleted",
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Report"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No report found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/articles/{articleSlug}/block": {
            "put": {
                "tags": [
                    "Articles"
                ],
                "description": "Super admin and admin should be able to block a reported article",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Super admin or admin's token"
                    },
                    {
                        "name": "articleSlug",
                        "in": "path",
                        "description": "Slug of an article to block",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Article blocked"
                    },
                    "400": {
                        "description": "Article already blocked"
                    },
                    "404": {
                        "description": "Article not found"
                    },
                    "401": {
                        "description": "Unauthorized Access"
                    }
                }
            }
        },
        "/api/v1/articles/{articleSlug}/unblock": {
            "put": {
                "tags": [
                    "Articles"
                ],
                "description": "Super admin and admin should be able to unblock a reported article",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Super admin or admin's token"
                    },
                    {
                        "name": "articleSlug",
                        "in": "path",
                        "description": "Slug of an article to unblock",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Article unblocked"
                    },
                    "404": {
                        "description": "Article not found"
                    },
                    "401": {
                        "description": "Unauthorized Access"
                    }
                }
            }
        },
        "/api/v1/articles/{slug}": {
            "put": {
                "tags": [
                    "Articles"
                ],
                "description": "Authenticated user can update articles",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Articles slug",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "",
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "formData",
                        "description": "",
                        "type": "string"
                    },
                    {
                        "name": "tagList",
                        "in": "formData",
                        "description": "",
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "formData",
                        "description": "",
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "in": "formData",
                        "description": "",
                        "type": "file",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article updated successfully",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "$ref": "#/definitions/Articles"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User is not authenticated",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "string"
                                },
                                "me": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Fobidden to make changes",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Articles"
                ],
                "description": "Delate an article",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Articles slug",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer"
                                },
                                "data": {
                                    "type": "string",
                                    "$ref": "#/definitions/Articles"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "string"
                                },
                                "me": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Articles"
                ],
                "description": "Delate an article",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Articles slug",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the article",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer"
                                },
                                "data": {
                                    "type": "string",
                                    "$ref": "#/definitions/Articles"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User is not authenticated",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "string"
                                },
                                "me": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is fobidden to delete",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "string"
                                },
                                "me": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/articles/{slug}/highlights": {
            "post": {
                "tags": [
                    "Highlights"
                ],
                "description": "User can highlight a text of an article and comment on it",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token"
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of an article to hightlight",
                        "type": "string"
                    },
                    {
                        "name": "Highliht",
                        "in": "body",
                        "description": "Highlight a text",
                        "schema": {
                            "required": [
                                "startIndex",
                                "text"
                            ],
                            "properties": {
                                "startIndex": {
                                    "type": "integer"
                                },
                                "text": {
                                    "type": "string"
                                },
                                "comment": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Commented on the article"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Article Not Found"
                    },
                    "401": {
                        "description": "Unauthorized Access"
                    }
                }
            },
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Retrieve an article's comments",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Article successfully highlighted",
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Highlight"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "200": {
                        "description": "Highlight successfully deleted"
                    }
                }
            }
        },
        "/api/v1/bookmarks/{slug}": {
            "post": {
                "tags": [
                    "Bookmarks"
                ],
                "description": "Authenticated user can add bookmarks",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Articles slug",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Bookmark added successfully",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "$ref": "#/definitions/Bookmark"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User is not authenticated",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "string"
                                },
                                "me": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Article already bookmarked",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bookmarks"
                ],
                "description": "Delete a bookmark",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Bookmark slug",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the bookmark",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer"
                                },
                                "me": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User is not authenticated",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "string"
                                },
                                "me": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bookmark not found",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "string"
                                },
                                "me": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/bookmarks": {
            "get": {
                "tags": [
                    "Bookmarks"
                ],
                "description": "Get all bookmarks by a user",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of all bookmarks",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer"
                                },
                                "data": {
                                    "type": "string",
                                    "$ref": "#/definitions/Bookmarks"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bookmarks not found",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "string"
                                },
                                "me": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users/{role}/permissions": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "Super-admin should be able to create a permission",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token"
                    },
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role",
                        "type": "string"
                    },
                    {
                        "name": "Permission",
                        "in": "body",
                        "description": "Create permission",
                        "schema": {
                            "required": [
                                "permission"
                            ],
                            "properties": {
                                "permission": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Permission successfully created",
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Permission"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Users"
                ],
                "description": "User should be able to see role and it's permission",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token"
                    },
                    {
                        "name": "role",
                        "in": "path",
                        "description": "User role",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Permission retreived successfully",
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Permission"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{permissionId}/permissions": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "description": "Super-admin should be able to update a permission",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token"
                    },
                    {
                        "name": "permissionId",
                        "in": "path",
                        "description": "Id of permission",
                        "type": "integer"
                    },
                    {
                        "name": "Permission",
                        "in": "body",
                        "description": "Update permission",
                        "schema": {
                            "required": [
                                "permission"
                            ],
                            "properties": {
                                "permission": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Permission successfully Updated",
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Permission"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "description": "Super-admin should be able to delete a permission",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token"
                    },
                    {
                        "name": "permissionId",
                        "in": "path",
                        "description": "Id of permission",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Permission deleted successfully",
                        "schema": {
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Permission"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "properties": {
                "token": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "userName": {
                    "type": "string",
                    "uniqueItems": true
                },
                "email": {
                    "type": "string",
                    "uniqueItems": true
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "Profile": {
            "properties": {
                "username": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            }
        },
        "Signout": {
            "properties": {
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "email": {
                    "type": "file"
                }
            }
        },
        "Login": {
            "properties": {
                "token": {
                    "type": "string"
                },
                "userName": {
                    "type": "string",
                    "uniqueItems": true
                },
                "email": {
                    "type": "string",
                    "uniqueItems": true
                }
            }
        },
        "Articles": {
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "images": {
                    "type": "string"
                },
                "tagList": {
                    "type": "string"
                },
                "author": {
                    "authorId": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    }
                }
            }
        },
        "RateArticle": {
            "properties": {
                "rating": {
                    "type": "integer"
                },
                "Author": {
                    "type": "string"
                }
            }
        },
        "Comment": {
            "required": [
                "comment"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                }
            }
        },
        "Bookmarks": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "articleId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "interger"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "Report": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "articleId": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "reporter": {
                    "type": "string"
                }
            }
        },
        "Permission": {
            "required": [
                "permission"
            ],
            "properties": {
                "permission": {
                    "type": "string"
                }
            }
        },
        "Highlight": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "articleId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "startIndex": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "date"
                },
                "createdAt": {
                    "type": "date"
                }
            }
        },
        "Error": {
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}